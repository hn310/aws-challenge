AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'sam-app

  Sample SAM Template for sam-app

  '
Globals:
  Function:
    Timeout: 60
Resources:
  FortuneFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://s3namnvh/1c28b727ecc8cb26031632976ac4c072
      Handler: app.lambda_handler
      Runtime: python3.8
      Role:
        Fn::GetAtt:
        - FortuneLambdaRole
        - Arn
  FortuneLambdaPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: FortuneLambdaPolicy
      Roles:
      - Ref: FortuneLambdaRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Action:
          - dynamodb:GetItem
          - dynamodb:DeleteItem
          - dynamodb:PutItem
          - dynamodb:Scan
          - dynamodb:Query
          - dynamodb:UpdateItem
          - dynamodb:BatchWriteItem
          - dynamodb:BatchGetItem
          - dynamodb:DescribeTable
          - dynamodb:ConditionCheckItem
          - dynamodb:ListTables
          - dynamodb:CreateTable
          Resource:
          - Fn::Sub: arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*
        - Effect: Allow
          Action:
          - logs:CreateLogStream
          - logs:PutLogEvents
          Resource:
          - Fn::Sub: arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:*
        - Effect: Allow
          Action:
          - logs:CreateLogGroup
          - ses:SendEmail
          Resource:
          - '*'
  FortuneLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
